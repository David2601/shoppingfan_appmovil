{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { CommonActions } from '@react-navigation/native';\nexport function navigate(_ref) {\n  var routeName = _ref.routeName,\n    params = _ref.params,\n    key = _ref.key,\n    action = _ref.action;\n  if (action !== undefined) {\n    throw new Error('Sub-actions are not supported for `navigate`. Remove the `action` key from the options.');\n  }\n  return CommonActions.navigate({\n    name: routeName,\n    key: key,\n    params: params\n  });\n}\nexport function back(options) {\n  return (options === null || options === void 0 ? void 0 : options.key) != null ? function (state) {\n    return _objectSpread(_objectSpread({}, CommonActions.goBack()), {}, {\n      source: options.key,\n      target: state.key\n    });\n  } : CommonActions.goBack();\n}\nexport function setParams(_ref2) {\n  var params = _ref2.params,\n    key = _ref2.key;\n  return _objectSpread(_objectSpread({}, CommonActions.setParams(params)), key !== undefined ? {\n    source: key\n  } : null);\n}","map":{"version":3,"mappings":";;;AAAA,SAASA,aAAT,QAA+C,0BAA/C;AAEA,OAAO,SAASC,QAAT,OAUkB;EAAA,IATvBC,SADuB,QACvBA,SADuB;IAEvBC,MAFuB,QAEvBA,MAFuB;IAGvBC,GAHuB,QAGvBA,GAHuB;IAIvBC;EAOA,IAAIA,MAAM,KAAKC,SAAf,EAA0B;IACxB,MAAM,IAAIC,KAAJ,CACJ,yFADI,CAAN;EAGD;EAED,OAAOP,aAAa,CAACC,QAAd,CAAuB;IAC5BO,IAAI,EAAEN,SADsB;IAE5BE,GAAG,EAAEA,GAFuB;IAG5BD,MAAM,EAAEA;EAHoB,CAAvB,CAAP;AAKD;AAED,OAAO,SAASM,IAAT,CAAcC,OAAd,EAAiD;EACtD,OAAO,QAAO,SAAP,WAAO,WAAP,mBAAO,CAAEN,GAAT,KAAgB,IAAhB,GACFO,eAAD;IAAA,uCACKX,aAAa,CAACY,MAAd,EADwB;MAE3BC,MAAM,EAAEH,OAAO,CAACN,GAFW;MAG3BU,MAAM,EAAEH,KAAK,CAACP;IAAAA;EAAAA,CAJb,GAMHJ,aAAa,CAACY,MAAd,EANJ;AAOD;AAED,OAAO,SAASG,SAAT,QAMkB;EAAA,IALvBZ,MADwB,SACxBA,MADwB;IAExBC;EAKA,uCACKJ,aAAa,CAACe,SAAd,CAAwBZ,MAAxB,CADE,GAEDC,GAAG,KAAKE,SAAR,GAAoB;IAAEO,MAAM,EAAET;EAAV,CAApB,GAAsC,IAA1C;AAEH","names":["CommonActions","navigate","routeName","params","key","action","undefined","Error","name","back","options","state","goBack","source","target","setParams"],"sources":["NavigationActions.tsx"],"sourcesContent":["import { CommonActions, NavigationState } from '@react-navigation/native';\n\nexport function navigate({\n  routeName,\n  params,\n  key,\n  action,\n}: {\n  routeName: string;\n  params?: object;\n  key?: string;\n  action?: never;\n}): CommonActions.Action {\n  if (action !== undefined) {\n    throw new Error(\n      'Sub-actions are not supported for `navigate`. Remove the `action` key from the options.'\n    );\n  }\n\n  return CommonActions.navigate({\n    name: routeName,\n    key: key,\n    params: params,\n  });\n}\n\nexport function back(options?: { key?: null | string }) {\n  return options?.key != null\n    ? (state: NavigationState) => ({\n        ...CommonActions.goBack(),\n        source: options.key,\n        target: state.key,\n      })\n    : CommonActions.goBack();\n}\n\nexport function setParams({\n  params,\n  key,\n}: {\n  params: object;\n  key?: string;\n}): CommonActions.Action {\n  return {\n    ...CommonActions.setParams(params),\n    ...(key !== undefined ? { source: key } : null),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}