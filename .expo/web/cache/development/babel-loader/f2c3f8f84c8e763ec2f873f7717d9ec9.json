{"ast":null,"code":"import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nexport default function NavigationEvents(props) {\n  var navigation = useNavigation();\n  var propsRef = React.useRef(props);\n  React.useEffect(function () {\n    propsRef.current = props;\n  });\n  React.useEffect(function () {\n    var unsubFocus = navigation.addListener('focus', function () {\n      var _propsRef$current$onW, _propsRef$current;\n      (_propsRef$current$onW = (_propsRef$current = propsRef.current).onWillFocus) === null || _propsRef$current$onW === void 0 ? void 0 : _propsRef$current$onW.call(_propsRef$current);\n    });\n    var unsubBlur = navigation.addListener('blur', function () {\n      var _propsRef$current$onW2, _propsRef$current2;\n      (_propsRef$current$onW2 = (_propsRef$current2 = propsRef.current).onWillBlur) === null || _propsRef$current$onW2 === void 0 ? void 0 : _propsRef$current$onW2.call(_propsRef$current2);\n    });\n\n    var unsubTransitionEnd = navigation.addListener('transitionEnd', function () {\n      if (navigation.isFocused()) {\n        var _propsRef$current$onD, _propsRef$current3;\n        (_propsRef$current$onD = (_propsRef$current3 = propsRef.current).onDidFocus) === null || _propsRef$current$onD === void 0 ? void 0 : _propsRef$current$onD.call(_propsRef$current3);\n      } else {\n        var _propsRef$current$onD2, _propsRef$current4;\n        (_propsRef$current$onD2 = (_propsRef$current4 = propsRef.current).onDidBlur) === null || _propsRef$current$onD2 === void 0 ? void 0 : _propsRef$current$onD2.call(_propsRef$current4);\n      }\n    });\n    return function () {\n      unsubFocus();\n      unsubBlur();\n      unsubTransitionEnd();\n    };\n  }, [navigation]);\n  return null;\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AASA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAwC;EACrD,IAAMC,UAAU,GAAGH,aAAa,EAAhC;EACA,IAAMI,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAaH,KAAb,CAAjB;EAEAH,KAAK,CAACO,SAAN,CAAgB,YAAM;IACpBF,QAAQ,CAACG,OAAT,GAAmBL,KAAnB;EACD,CAFD;EAIAH,KAAK,CAACO,SAAN,CAAgB,YAAM;IACpB,IAAME,UAAU,GAAGL,UAAU,CAACM,WAAX,CAAuB,OAAvB,EAAgC,YAAM;MAAA;MACvD,sDAAQ,CAACF,OAAT,EAAiBG,WAAjB;IACD,CAFkB,CAAnB;IAIA,IAAMC,SAAS,GAAGR,UAAU,CAACM,WAAX,CAAuB,MAAvB,EAA+B,YAAM;MAAA;MACrD,wDAAQ,CAACF,OAAT,EAAiBK,UAAjB;IACD,CAFiB,CAAlB;;IAKA,IAAMC,kBAAkB,GAAGV,UAAU,CAACM,WAAX,CAAuB,eAAvB,EAAwC,YAAM;MACvE,IAAIN,UAAU,CAACW,SAAX,EAAJ,EAA4B;QAAA;QAC1B,uDAAQ,CAACP,OAAT,EAAiBQ,UAAjB;MACD,CAFD,MAEO;QAAA;QACL,wDAAQ,CAACR,OAAT,EAAiBS,SAAjB;MACD;IACF,CAN0B,CAA3B;IAQA,OAAO,YAAM;MACXR,UAAU;MACVG,SAAS;MACTE,kBAAkB;IACnB,CAJD;EAKD,CAvBD,EAuBG,CAACV,UAAD,CAvBH;EAyBA,OAAO,IAAP;AACD","names":["React","useNavigation","NavigationEvents","props","navigation","propsRef","useRef","useEffect","current","unsubFocus","addListener","onWillFocus","unsubBlur","onWillBlur","unsubTransitionEnd","isFocused","onDidFocus","onDidBlur"],"sources":["NavigationEvents.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useNavigation } from '@react-navigation/native';\n\ntype Props = {\n  onWillFocus?: () => void;\n  onDidFocus?: () => void;\n  onWillBlur?: () => void;\n  onDidBlur?: () => void;\n};\n\nexport default function NavigationEvents(props: Props) {\n  const navigation = useNavigation();\n  const propsRef = React.useRef(props);\n\n  React.useEffect(() => {\n    propsRef.current = props;\n  });\n\n  React.useEffect(() => {\n    const unsubFocus = navigation.addListener('focus', () => {\n      propsRef.current.onWillFocus?.();\n    });\n\n    const unsubBlur = navigation.addListener('blur', () => {\n      propsRef.current.onWillBlur?.();\n    });\n\n    // @ts-expect-error: transitionEnd may not exist on this navigator\n    const unsubTransitionEnd = navigation.addListener('transitionEnd', () => {\n      if (navigation.isFocused()) {\n        propsRef.current.onDidFocus?.();\n      } else {\n        propsRef.current.onDidBlur?.();\n      }\n    });\n\n    return () => {\n      unsubFocus();\n      unsubBlur();\n      unsubTransitionEnd();\n    };\n  }, [navigation]);\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}