{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StackActions } from '@react-navigation/native';\nexport function reset() {\n  throw new Error('The legacy `reset` action is not supported. Use the new reset API by accessing the original navigation object at `navigation.original`.');\n}\nexport function replace(_ref) {\n  var routeName = _ref.routeName,\n    params = _ref.params,\n    key = _ref.key,\n    newKey = _ref.newKey,\n    action = _ref.action;\n  if (action !== undefined) {\n    throw new Error('Sub-actions are not supported for `replace`. Remove the `action` key from the options.');\n  }\n  return _objectSpread({\n    type: 'REPLACE',\n    payload: {\n      name: routeName,\n      key: newKey,\n      params: params\n    }\n  }, key !== undefined ? {\n    source: key\n  } : null);\n}\nexport function push(_ref2) {\n  var routeName = _ref2.routeName,\n    params = _ref2.params,\n    action = _ref2.action;\n  if (action !== undefined) {\n    throw new Error('Sub-actions are not supported for `push`. Remove the `action` key from the options.');\n  }\n  return StackActions.push(routeName, params);\n}\nexport function pop(_ref3) {\n  var _ref3$n = _ref3.n,\n    n = _ref3$n === void 0 ? 1 : _ref3$n;\n  return StackActions.pop(n);\n}\nexport function popToTop() {\n  return StackActions.popToTop();\n}\nexport function dismiss() {\n  throw new Error('The legacy `dismiss` action is not supported.');\n}","map":{"version":3,"mappings":";;;AAAA,SAEEA,YAFF,QAIO,0BAJP;AAMA,OAAO,SAASC,KAAT,GAAuC;EAC5C,MAAM,IAAIC,KAAJ,CACJ,yIADI,CAAN;AAGD;AAED,OAAO,SAASC,OAAT,OAYa;EAAA,IAXlBC,SADsB,QACtBA,SADsB;IAEtBC,MAFsB,QAEtBA,MAFsB;IAGtBC,GAHsB,QAGtBA,GAHsB;IAItBC,MAJsB,QAItBA,MAJsB;IAKtBC;EAQA,IAAIA,MAAM,KAAKC,SAAf,EAA0B;IACxB,MAAM,IAAIP,KAAJ,CACJ,wFADI,CAAN;EAGD;EAED;IACEQ,IAAI,EAAE,SADD;IAELC,OAAO,EAAE;MACPC,IAAI,EAAER,SADC;MAEPE,GAAG,EAAEC,MAFE;MAGPF;IAHO;EAFJ,GAODC,GAAG,KAAKG,SAAR,GAAoB;IAAEI,MAAM,EAAEP;EAAV,CAApB,GAAsC,IAA1C;AAEH;AAED,OAAO,SAASQ,IAAT,QAQa;EAAA,IAPlBV,SADmB,SACnBA,SADmB;IAEnBC,MAFmB,SAEnBA,MAFmB;IAGnBG;EAMA,IAAIA,MAAM,KAAKC,SAAf,EAA0B;IACxB,MAAM,IAAIP,KAAJ,CACJ,qFADI,CAAN;EAGD;EAED,OAAOF,YAAY,CAACc,IAAb,CAAkBV,SAAlB,EAA6BC,MAA7B,CAAP;AACD;AAED,OAAO,SAASU,GAAT,QAAwD;EAAA,oBAAzCC,CAAC;IAADA,CAAC,wBAAG;EACxB,OAAOhB,YAAY,CAACe,GAAb,CAAiBC,CAAjB,CAAP;AACD;AAED,OAAO,SAASC,QAAT,GAAqC;EAC1C,OAAOjB,YAAY,CAACiB,QAAb,EAAP;AACD;AAED,OAAO,SAASC,OAAT,GAAyC;EAC9C,MAAM,IAAIhB,KAAJ,CAAU,+CAAV,CAAN;AACD","names":["StackActions","reset","Error","replace","routeName","params","key","newKey","action","undefined","type","payload","name","source","push","pop","n","popToTop","dismiss"],"sources":["StackActions.tsx"],"sourcesContent":["import {\n  CommonActions,\n  StackActions,\n  StackActionType,\n} from '@react-navigation/native';\n\nexport function reset(): CommonActions.Action {\n  throw new Error(\n    'The legacy `reset` action is not supported. Use the new reset API by accessing the original navigation object at `navigation.original`.'\n  );\n}\n\nexport function replace({\n  routeName,\n  params,\n  key,\n  newKey,\n  action,\n}: {\n  routeName: string;\n  params?: object;\n  key?: string;\n  newKey?: string;\n  action?: never;\n}): StackActionType {\n  if (action !== undefined) {\n    throw new Error(\n      'Sub-actions are not supported for `replace`. Remove the `action` key from the options.'\n    );\n  }\n\n  return {\n    type: 'REPLACE',\n    payload: {\n      name: routeName,\n      key: newKey,\n      params,\n    },\n    ...(key !== undefined ? { source: key } : null),\n  };\n}\n\nexport function push({\n  routeName,\n  params,\n  action,\n}: {\n  routeName: string;\n  params?: object;\n  action?: never;\n}): StackActionType {\n  if (action !== undefined) {\n    throw new Error(\n      'Sub-actions are not supported for `push`. Remove the `action` key from the options.'\n    );\n  }\n\n  return StackActions.push(routeName, params);\n}\n\nexport function pop({ n = 1 }: { n: number }): StackActionType {\n  return StackActions.pop(n);\n}\n\nexport function popToTop(): StackActionType {\n  return StackActions.popToTop();\n}\n\nexport function dismiss(): CommonActions.Action {\n  throw new Error('The legacy `dismiss` action is not supported.');\n}\n"]},"metadata":{},"sourceType":"module"}